<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zs.dao.TokenDao">

    <resultMap type="com.zs.entity.Token" id="TokenMap">
        <result property="toId" column="to_id" jdbcType="INTEGER"/>
        <result property="toUuid" column="to_uuid" jdbcType="VARCHAR"/>
        <result property="toLogin" column="to_login" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="uId" column="u_id" jdbcType="INTEGER"/>
        <result property="es1" column="es_1" jdbcType="VARCHAR"/>
        <result property="es2" column="es_2" jdbcType="VARCHAR"/>
        <result property="es3" column="es_3" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TokenMap">
        select to_id,
               to_uuid,
               to_login,
               username,
               u_id,
               es_1,
               es_2,
               es_3
        from token
        where to_id = #{toId}
    </select>

    <!--查询单个from UUID-->
    <select id="queryByUUId" resultMap="TokenMap">
        select to_id,
               to_uuid,
               to_login,
               username,
               u_id,
               es_1,
               es_2,
               es_3
        from token
        where to_uuid = #{toUuid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TokenMap">
        select
        to_id, to_uuid, to_login, username, u_id, es_1, es_2, es_3
        from token
        <where>
            <if test="toId != null">
                and to_id = #{toId}
            </if>
            <if test="toUuid != null and toUuid != ''">
                and to_uuid = #{toUuid}
            </if>
            <if test="toLogin != null and toLogin != ''">
                and to_login = #{toLogin}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="uId != null">
                and u_id = #{uId}
            </if>
            <if test="es1 != null and es1 != ''">
                and es_1 = #{es1}
            </if>
            <if test="es2 != null and es2 != ''">
                and es_2 = #{es2}
            </if>
            <if test="es3 != null and es3 != ''">
                and es_3 = #{es3}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from token
        <where>
            <if test="toId != null">
                and to_id = #{toId}
            </if>
            <if test="toUuid != null and toUuid != ''">
                and to_uuid = #{toUuid}
            </if>
            <if test="toLogin != null and toLogin != ''">
                and to_login = #{toLogin}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="uId != null">
                and u_id = #{uId}
            </if>
            <if test="es1 != null and es1 != ''">
                and es_1 = #{es1}
            </if>
            <if test="es2 != null and es2 != ''">
                and es_2 = #{es2}
            </if>
            <if test="es3 != null and es3 != ''">
                and es_3 = #{es3}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="toId" useGeneratedKeys="true">
        insert into token(to_uuid, to_login, username, u_id, es_1, es_2, es_3)
        values (#{toUuid}, #{toLogin}, #{username}, #{uId}, #{es1}, #{es2}, #{es3})
    </insert>

    <insert id="insertBatch" keyProperty="toId" useGeneratedKeys="true">
        insert into token(to_uuid, to_login, username, u_id, es_1, es_2, es_3)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.toUuid}, #{entity.toLogin}, #{entity.username}, #{entity.uId}, #{entity.es1}, #{entity.es2},
            #{entity.es3})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="toId" useGeneratedKeys="true">
        insert into token(to_uuid, to_login, username, u_id, es_1, es_2, es_3)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.toUuid}, #{entity.toLogin}, #{entity.username}, #{entity.uId}, #{entity.es1}, #{entity.es2},
            #{entity.es3})
        </foreach>
        on duplicate key update
        to_uuid = values(to_uuid),
        to_login = values(to_login),
        username = values(username),
        u_id = values(u_id),
        es_1 = values(es_1),
        es_2 = values(es_2),
        es_3 = values(es_3)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update token
        <set>
            <if test="toUuid != null and toUuid != ''">
                to_uuid = #{toUuid},
            </if>
            <if test="toLogin != null and toLogin != ''">
                to_login = #{toLogin},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="uId != null">
                u_id = #{uId},
            </if>
            <if test="es1 != null and es1 != ''">
                es_1 = #{es1},
            </if>
            <if test="es2 != null and es2 != ''">
                es_2 = #{es2},
            </if>
            <if test="es3 != null and es3 != ''">
                es_3 = #{es3},
            </if>
        </set>
        where to_id = #{toId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from token
        where to_id = #{toId}
    </delete>

</mapper>

