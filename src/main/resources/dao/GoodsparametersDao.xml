<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zs.dao.GoodsparametersDao">

    <resultMap type="com.zs.entity.Goodsparameters" id="GoodsparametersMap">
        <result property="pId" column="p_id" jdbcType="INTEGER"/>
        <result property="pType" column="p_type" jdbcType="VARCHAR"/>
        <result property="pMaterialOrigin" column="p_material_origin" jdbcType="VARCHAR"/>
        <result property="pOrigin" column="p_origin" jdbcType="VARCHAR"/>
        <result property="pBatching" column="p_batching" jdbcType="VARCHAR"/>
        <result property="pProduct" column="p_product" jdbcType="VARCHAR"/>
        <result property="pWeightTime" column="p_weight_time" jdbcType="VARCHAR"/>
        <result property="pProductionLicenseNo" column="p_production_License_No" jdbcType="VARCHAR"/>
        <result property="pStorageMeans" column="p_storage_means" jdbcType="VARCHAR"/>
        <result property="pUsage" column="p_usage" jdbcType="VARCHAR"/>
        <result property="gId" column="g_id" jdbcType="INTEGER"/>
        <result property="es1" column="es_1" jdbcType="VARCHAR"/>
        <result property="es2" column="es_2" jdbcType="VARCHAR"/>
        <result property="es3" column="es_3" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="GoodsparametersMap">
        select p_id,
               p_type,
               p_material_origin,
               p_origin,
               p_batching,
               p_product,
               p_weight_time,
               p_production_License_No,
               p_storage_means,
               p_usage,
               g_id,
               es_1,
               es_2,
               es_3
        from goodsparameters
        where p_id = #{pId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="GoodsparametersMap">
        select
        p_id, p_type, p_material_origin, p_origin, p_batching, p_product, p_weight_time, p_production_License_No,
        p_storage_means, p_usage, g_id, es_1, es_2, es_3
        from goodsparameters
        <where>
            <if test="pId != null">
                and p_id = #{pId}
            </if>
            <if test="pType != null and pType != ''">
                and p_type = #{pType}
            </if>
            <if test="pMaterialOrigin != null and pMaterialOrigin != ''">
                and p_material_origin = #{pMaterialOrigin}
            </if>
            <if test="pOrigin != null and pOrigin != ''">
                and p_origin = #{pOrigin}
            </if>
            <if test="pBatching != null and pBatching != ''">
                and p_batching = #{pBatching}
            </if>
            <if test="pProduct != null and pProduct != ''">
                and p_product = #{pProduct}
            </if>
            <if test="pWeightTime != null and pWeightTime != ''">
                and p_weight_time = #{pWeightTime}
            </if>
            <if test="pProductionLicenseNo != null and pProductionLicenseNo != ''">
                and p_production_License_No = #{pProductionLicenseNo}
            </if>
            <if test="pStorageMeans != null and pStorageMeans != ''">
                and p_storage_means = #{pStorageMeans}
            </if>
            <if test="pUsage != null and pUsage != ''">
                and p_usage = #{pUsage}
            </if>
            <if test="gId != null">
                and g_id = #{gId}
            </if>
            <if test="es1 != null and es1 != ''">
                and es_1 = #{es1}
            </if>
            <if test="es2 != null and es2 != ''">
                and es_2 = #{es2}
            </if>
            <if test="es3 != null and es3 != ''">
                and es_3 = #{es3}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from goodsparameters
        <where>
            <if test="pId != null">
                and p_id = #{pId}
            </if>
            <if test="pType != null and pType != ''">
                and p_type = #{pType}
            </if>
            <if test="pMaterialOrigin != null and pMaterialOrigin != ''">
                and p_material_origin = #{pMaterialOrigin}
            </if>
            <if test="pOrigin != null and pOrigin != ''">
                and p_origin = #{pOrigin}
            </if>
            <if test="pBatching != null and pBatching != ''">
                and p_batching = #{pBatching}
            </if>
            <if test="pProduct != null and pProduct != ''">
                and p_product = #{pProduct}
            </if>
            <if test="pWeightTime != null and pWeightTime != ''">
                and p_weight_time = #{pWeightTime}
            </if>
            <if test="pProductionLicenseNo != null and pProductionLicenseNo != ''">
                and p_production_License_No = #{pProductionLicenseNo}
            </if>
            <if test="pStorageMeans != null and pStorageMeans != ''">
                and p_storage_means = #{pStorageMeans}
            </if>
            <if test="pUsage != null and pUsage != ''">
                and p_usage = #{pUsage}
            </if>
            <if test="gId != null">
                and g_id = #{gId}
            </if>
            <if test="es1 != null and es1 != ''">
                and es_1 = #{es1}
            </if>
            <if test="es2 != null and es2 != ''">
                and es_2 = #{es2}
            </if>
            <if test="es3 != null and es3 != ''">
                and es_3 = #{es3}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="pId" useGeneratedKeys="true">
        insert into goodsparameters(null , p_material_origin, p_origin, p_batching, p_product, p_weight_time,
                                    p_production_License_No, p_storage_means, p_usage, g_id, es_1, es_2, es_3)
        values (#{pType}, #{pMaterialOrigin}, #{pOrigin}, #{pBatching}, #{pProduct}, #{pWeightTime},
                #{pProductionLicenseNo}, #{pStorageMeans}, #{pUsage}, #{gId}, #{es1}, #{es2}, #{es3})
    </insert>

    <insert id="insertBatch" keyProperty="pId" useGeneratedKeys="true">
        insert into goodsparameters(p_type, p_material_origin, p_origin, p_batching, p_product, p_weight_time,
        p_production_License_No, p_storage_means, p_usage, g_id, es_1, es_2, es_3)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.pType}, #{entity.pMaterialOrigin}, #{entity.pOrigin}, #{entity.pBatching}, #{entity.pProduct},
            #{entity.pWeightTime}, #{entity.pProductionLicenseNo}, #{entity.pStorageMeans}, #{entity.pUsage},
            #{entity.gId}, #{entity.es1}, #{entity.es2}, #{entity.es3})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="pId" useGeneratedKeys="true">
        insert into goodsparameters(p_type, p_material_origin, p_origin, p_batching, p_product, p_weight_time,
        p_production_License_No, p_storage_means, p_usage, g_id, es_1, es_2, es_3)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.pType}, #{entity.pMaterialOrigin}, #{entity.pOrigin}, #{entity.pBatching}, #{entity.pProduct},
            #{entity.pWeightTime}, #{entity.pProductionLicenseNo}, #{entity.pStorageMeans}, #{entity.pUsage},
            #{entity.gId}, #{entity.es1}, #{entity.es2}, #{entity.es3})
        </foreach>
        on duplicate key update
        p_type = values(p_type),
        p_material_origin = values(p_material_origin),
        p_origin = values(p_origin),
        p_batching = values(p_batching),
        p_product = values(p_product),
        p_weight_time = values(p_weight_time),
        p_production_License_No = values(p_production_License_No),
        p_storage_means = values(p_storage_means),
        p_usage = values(p_usage),
        g_id = values(g_id),
        es_1 = values(es_1),
        es_2 = values(es_2),
        es_3 = values(es_3)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update goodsparameters
        <set>
            <if test="pType != null and pType != ''">
                p_type = #{pType},
            </if>
            <if test="pMaterialOrigin != null and pMaterialOrigin != ''">
                p_material_origin = #{pMaterialOrigin},
            </if>
            <if test="pOrigin != null and pOrigin != ''">
                p_origin = #{pOrigin},
            </if>
            <if test="pBatching != null and pBatching != ''">
                p_batching = #{pBatching},
            </if>
            <if test="pProduct != null and pProduct != ''">
                p_product = #{pProduct},
            </if>
            <if test="pWeightTime != null and pWeightTime != ''">
                p_weight_time = #{pWeightTime},
            </if>
            <if test="pProductionLicenseNo != null and pProductionLicenseNo != ''">
                p_production_License_No = #{pProductionLicenseNo},
            </if>
            <if test="pStorageMeans != null and pStorageMeans != ''">
                p_storage_means = #{pStorageMeans},
            </if>
            <if test="pUsage != null and pUsage != ''">
                p_usage = #{pUsage},
            </if>
            <if test="gId != null">
                g_id = #{gId},
            </if>
            <if test="es1 != null and es1 != ''">
                es_1 = #{es1},
            </if>
            <if test="es2 != null and es2 != ''">
                es_2 = #{es2},
            </if>
            <if test="es3 != null and es3 != ''">
                es_3 = #{es3},
            </if>
        </set>
        where p_id = #{pId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from goodsparameters
        where p_id = #{pId}
    </delete>

</mapper>

